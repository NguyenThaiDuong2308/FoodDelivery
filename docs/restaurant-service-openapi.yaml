openapi: 3.0.4
info:
  title: Restaurant Service API
  description: API for managing restaurants and their menu items.
  version: 1.0.0
servers:
  - url: http://192.168.237.130:8000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Restaurant:
      type: object
      properties:
        id:
          type: integer
          example: 3
        manager_id:
          type: integer
          example: 7
        name:
          type: string
          example: restaurant-3
        description:
          type: string
          example: "12434234420"
        address:
          type: string
          example: "22 Ao Sen, Hà Đông, Hà Nội"
        phone_number:
          type: string
          example: "0123456789"
        email:
          type: string
          example: "11@gmail.com"
        status:
          type: string
          enum: [open, closed]
        menu_items:
          type: array
          items:
            $ref: "#/components/schemas/MenuItem"
    RestaurantCreate:
      type: object
      required: [name, description, address, phone_number, email, status]
      properties:
        name:
          type: string
        description:
          type: string
        address:
          type: string
        phone_number:
          type: string
        email:
          type: string
        status:
          type: string
    MenuItem:
      type: object
      properties:
        id:
          type: integer
          example: 2
        restaurant_id:
          type: integer
          example: 1
        name:
          type: string
          example: "2 banana"
        description:
          type: string
          example: "nothing here"
        price:
          type: number
          format: float
          example: 30
        available:
          type: boolean
          example: true
    MenuItemCreate:
      type: object
      required: [name, price, available]
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        available:
          type: boolean

paths:
  /restaurant:
    get:
      summary: Get list of restaurants
      tags: [Restaurants]
      responses:
        "200":
          description: List of restaurants
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Restaurant"
    post:
      summary: Create a new restaurant
      tags: [Restaurants]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestaurantCreate"
      responses:
        "201":
          description: Restaurant created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurant"

  /restaurant/{restaurantId}:
    get:
      summary: Get restaurant details by ID
      tags: [Restaurants]
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Restaurant details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurant"
    put:
      summary: Update a restaurant
      tags: [Restaurants]
      security:
        - bearerAuth: []
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestaurantCreate"
      responses:
        "200":
          description: Restaurant updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurant"

  /restaurant/{restaurantId}/menu:
    get:
      summary: Get menu list for a restaurant
      tags: [Menu]
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of menu items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MenuItem"
    post:
      summary: Create a menu item for a restaurant
      tags: [Menu]
      security:
        - bearerAuth: []
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MenuItemCreate"
      responses:
        "201":
          description: Menu item created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuItem"

  /restaurant/{restaurantId}/menu/{menuItemId}:
    get:
      summary: Get a menu item by ID
      tags: [Menu]
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: integer
        - name: menuItemId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Menu item details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuItem"
    put:
      summary: Update a menu item
      tags: [Menu]
      security:
        - bearerAuth: []
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: integer
        - name: menuItemId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MenuItemCreate"
      responses:
        "200":
          description: Menu item updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuItem"
    delete:
      summary: Delete a menu item
      tags: [Menu]
      security:
        - bearerAuth: []
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: integer
        - name: menuItemId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Menu item deleted
