openapi: 3.0.4
info:
  title: API doc for UserService
  version: 1.0.0
servers:
  - url: http://192.168.237.130:8000
    description: Local Ubuntu server

paths:
  /auth/register:
    post:
      summary: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                phone_number:
                  type: string
                address:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: [customer, shipper, restaurant_admin, admin]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized

  /auth/login:
    post:
      summary: Login User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                "email":
                  type: string
                "password":
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  "accessToken":
                    type: string
                  "refreshToken":
                    type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized

  /auth/logout:
    get:
      summary: Logout User
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
        "500":
          description: Server Error

  /auth/reset-password:
    post:
      summary: Change user password
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                "old_pass":
                  type: string
                "new_pass":
                  type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized

  /auth/forgot-password:
    post:
      summary: Sending email for user when forgo password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                "email":
                  type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Server Error

  /auth/reset-forgot-password:
    post:
      summary: Reset password when forgot
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                "reset_token":
                  type: string
                "new_password":
                  type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized

  /auth/refresh-token:
    post:
      summary: Refresh accessToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                "refresh_token":
                  type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Server Error

  /user:
    get:
      summary: Get all users detail
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "404":
          description: Not found

  /user/{id}:
    get:
      summary: Get user by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not found
    put:
      summary: Update user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                phone_number:
                  type: string
                address:
                  type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Server Error
    delete:
      summary: Delete user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Server Error


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        name:
          type: string
        phone_number:
          type: string
        address:
          type: string
        role:
          type: string


